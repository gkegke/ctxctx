name: Python CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # Run tests on multiple Python versions for compatibility
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry' # caches dependencies for faster runs

    # Step 1: Install Poetry using the official action
    - name: Setup Poetry (primary method)
      id: poetry-setup
      uses: abatilo/actions-poetry@v3
      with:
        poetry-version: 1.8.3

    # Step 2: Verify Poetry is installed; fallback to pip install if missing
    - name: Verify Poetry installation
      run: |
        if ! command -v poetry &> /dev/null; then
          echo "Poetry not found in PATH â€” installing via pip as fallback..."
          pip install poetry==1.8.3
        fi
        poetry --version

    - name: Install dependencies
      run: poetry install --no-root --no-interaction

    - name: Run Tests with Coverage
      run: poetry run pytest --cov=ctxctx --cov-report=xml --cov-report=term-missing

    - name: Run Black formatter check
      run: poetry run black --check .
      continue-on-error: true

    - name: Run isort check (import sorting)
      run: poetry run isort --check-only .
      continue-on-error: true

    - name: Run Flake8 linter
      run: poetry run flake8 .
      continue-on-error: true

    - name: Run MyPy type checker
      run: poetry run mypy ctxctx
      continue-on-error: true

    - name: Run Safety check (dependency vulnerabilities)
      run: |
        poetry export --without-hashes --format=requirements.txt > requirements.txt
        pip install safety
        safety check -r requirements.txt
      continue-on-error: true

    - name: Run Bandit security linter
      run: poetry run bandit -r ctxctx -ll
      continue-on-error: true
